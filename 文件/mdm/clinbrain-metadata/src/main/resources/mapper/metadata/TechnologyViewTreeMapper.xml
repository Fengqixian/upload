<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinbrain.bd.mdm.MetadataManage.technologyView.mapper.TechnologyViewTreeMapper">
    <!--连接查询数据库  表 列 供组装成树-->
    <select id="treeList" resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.TechnologyViewTree">
    select db.id database_id,db.resource_id database_resid,db.name_cn database_name_cn,db.name_en database_name_en,
    db.connect_ip,db.connect_host,db.connect_user,db.connect_password,db.database_type,
    tb.id table_id,tb.resource_id table_resid, tb.name_cn table_name_cn,tb.name_en table_name_en
    from mdm_technology_database db
    left join mdm_technology_table tb on tb.database_id = db.id
    order by db.id,tb.id
  </select>

    <select id="getTableColumnList" resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Column">
        select * from mdm_technology_column where table_id = ${tableId}
        <if test="queryString != null and queryString.trim()!=''">
            and (name_cn like CONCAT('%',#{queryString},'%')
            or name_en like CONCAT('%',#{queryString},'%'))
        </if>
    </select>

    <!-- 模糊查询字段信息，附带表，库信息，用于给数据元关联字段-->
    <select id="getTechnologyColumnList"
            resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.TechnologyViewTree">
        SELECT
        tColumn.id,
        tColumn.name_cn column_name_cn,
        tColumn.name_en column_name_en,
        tColumn.resource_id,
        tColumn.resource_id columnResid,
        tTable.id table_id,
        tTable.name_cn table_name_cn,
        tTable.name_en table_name_en,
        tTable.resource_id tableResid,
        tDatabase.id database_id,
        tDatabase.resource_id databaseResid,
        tDatabase.name_cn database_name_cn,
        tDatabase.name_en database_name_en,
        ele.resource_id ele_resource_id
        FROM
        mdm_technology_column tColumn
        LEFT JOIN mdm_technology_table tTable ON tColumn.table_id = tTable.id
        LEFT JOIN mdm_technology_database tDatabase ON tTable.database_id = tDatabase.id
        LEFT JOIN mdm_element_column_ref ref ON tColumn.id = ref.column_id
        LEFT JOIN mdm_data_element ele ON ele.id = ref.element_id
        <trim prefix="where" prefixOverrides="and">
            <if test="queryString != null and queryString.trim()!=''">
                and (tColumn.name_cn like CONCAT('%',#{queryString},'%')
                or tColumn.name_en like CONCAT('%',#{queryString},'%'))
            </if>
            <if test="elementIds !=null and elementIds.size() > 0">
                and ref.element_id in
                <foreach collection="elementIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        order by tColumn.id
    </select>


    <!-- 数据库表元数据-->
    <select id="getDataTableList"
            resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Table">
        select table_name nameEn, engine, table_comment nameCn from information_schema.tables
            where table_schema = (select database())  and engine ='InnoDB'
            <if test="tableName != null and tableName.trim() != ''">
                and table_name like concat('%', #{tableName}, '%')
            </if>
            order by create_time desc
        </select>
        <!-- 数据库表的字段元数据-->
        <select id="getDataColumnList" resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Column">
              SELECT
            column_name nameEn,
            column_comment COMMENT,
            column_comment nameCn,
--         CASE
--             column_key
--             WHEN 'PRI' THEN
--             'true'
--             WHEN 'UNI' THEN
--             'true' ELSE 'fasle'
--             END AS primaryKey,
        CASE
            is_nullable
            WHEN 'NO' THEN
            'true' ELSE 'false'
            END AS nullAllow,
            data_type AS dataType,
        CASE
            data_type
            WHEN 'int' THEN
            'number'
            WHEN 'timestamp' THEN
            'time'
            WHEN 'date' THEN
            'date'
            WHEN 'varchar' THEN
            'string'
            WHEN 'decimal' THEN
            'decimal' ELSE 'string'
            END as dataTypeGroup,
            character_maximum_length dataLength
        FROM
            information_schema.COLUMNS
        WHERE
            table_name = #{tableName}
            AND table_schema = ( SELECT DATABASE ( ) )
        ORDER BY
            ordinal_position
    </select>
    <!-- 数据库表元数据-->
    <select id="getDataGPTableList"
            resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Table">
        SELECT
        -- 		aaa.nspname AS "模式名",
        aaa.relname AS nameEn,
        aaa.table_comment AS nameCn
        -- 	ccc.attname AS "分布键"
        FROM
        (
        SELECT
        aa.oid,
        obj_description ( aa.oid ) AS table_comment,
        aa.relname,
        bb.localoid,
        bb.attrnums,
        regexp_split_to_table ( array_to_string ( bb.attrnums, ',' ), ',' ) AS att,
        dd.nspname
        FROM
        pg_class aa -- 原数据信息 最重要的表！
        LEFT JOIN gp_distribution_policy bb ON bb.localoid = aa.oid -- 分布键表
        LEFT JOIN pg_namespace dd ON dd.oid = aa.relnamespace -- 模式
        LEFT JOIN pg_inherits hh ON aa.oid = hh.inhrelid -- 继承表

        WHERE
        dd.nspname = 'public' -- 替换成需要的模式

        AND hh.inhrelid IS NULL
        ) aaa
        LEFT JOIN pg_attribute ccc ON ccc.attrelid = aaa.oid
        AND ccc.attnum = aaa.att :: INT
        WHERE
        ccc.attnum > 0
        GROUP BY aaa.relname,aaa.table_comment ORDER BY
        aaa.relname;
    </select>
    <!-- 数据库表的字段元数据-->
    <select id="getDataGPColumnList" resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Column">
        select  a.attname nameEn,db.description nameCn
            -- ,s.attrnums distributed_column
            , p.typname dataType
           -- ,at.adsrc AS column_default
             ,case p.typname
                when 'int8' then 'number'
                when 'int4' then 'number'
                when 'int2' then 'number'
                when 'timestamp' then 'time'
                when 'date' then 'date'
                when 'varchar' then 'string'
                when 'numeric' then  'decimal'
                        else 'string'
            end  dataTypeGroup
                ,CASE
                 WHEN a.attnotnull THEN
                  1
                 ELSE
                 0
               END AS nullAllow
                     ,a.atttypmod - 4 as dataLength
         from pg_tables t
        inner join pg_class c on t.tablename=c.relname
        left join pg_description d on c.oid=d.objoid and d.objsubid=0
        left join pg_description db on c.oid=db.objoid and db.objsubid>0
        left join pg_attribute a on c.oid=a.attrelid and db.objsubid=a.attnum
        left join ( select a.attrnums[i.i] attrnums,b.attname,a.localoid
           from gp_distribution_policy a,
                (select generate_series(1,10)) i(i),  --预计表分布键的个数为10个
                pg_attribute b
          where a.attrnums[i.i] is not null
            and a.localoid=b.attrelid
            and a.attrnums[i.i]=b.attnum ) s on c.oid=s.localoid and a.attnum=s.attrnums
        left join pg_type p on a.atttypid=p.oid
        left join pg_attrdef at on c.oid=at.adrelid and a.attnum=at.adnum
        where upper(c.relname) = upper(#{tableName}) --表名
        order by a.attnum;
    </select>


    <select id="getDataHiveTableList" resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Table">
            SELECT
                t2.TBL_NAME AS nameEn,
                t2.TBL_NAME AS nameCn
--                 t2.TBL_TYPE AS TYPE,
--                 t2.CREATE_TIME AS CREATE_TIME,
--                 t2.LAST_ACCESS_TIME AS LAST_ACCESS_TIME,
--                 t2.OWNER AS OWNER,
            FROM
                TBLS t2,
                DBS t3
            WHERE
                t2.DB_ID = t3.DB_ID
                    and t3.NAME = #{dbName}
    </select>
    <select id="getDataHiveColumnList" resultType="com.clinbrain.bd.mdm.MetadataManage.technologyView.entity.Column">
        SELECT COLUMN_NAME nameEn, TYPE_NAME dataType FROM COLUMNS_V2
        where CD_ID in(
        select CD_ID from SDS where SD_ID in (
        select SD_ID from `TBLS`
        where TBL_NAME = #{tableName,jdbcType=VARCHAR}
        and DB_ID in (select DB_ID from `DBS` where NAME = #{dbName,jdbcType=VARCHAR})
        )
        ) order by INTEGER_IDX asc;
    </select>

</mapper>